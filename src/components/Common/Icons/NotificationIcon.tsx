import { SVGProps } from 'react'

type Props = SVGProps<SVGSVGElement> & {
  size?: number
  isNotified?: boolean
}

/**
  @description NotificationIcon how to pass fill color -> className='[&>path]:fill-primary-500' or className='text-red-500'
 */

const NotificationIcon = ({
  size = 22,
  isNotified = false,
  ...rest
}: Props) => {
  if (typeof size !== 'number') throw new Error('Icon width must be a number')
  const height = (size * 24) / 24

  // alert size is 25% of the icon size
  const notificationAlertSize = size * 0.5

  return (
    <div className='relative w-fit'>
      {isNotified && (
        <span
          className={`absolute -right-[2px] bottom-[85%] z-10 rounded-full bg-danger-500`}
          style={{
            width: notificationAlertSize,
            height: notificationAlertSize,
          }}
        />
      )}

      <svg
        width={size}
        height={height}
        viewBox='0 0 22 24'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
        {...rest}>
        <path
          d='M18.2657 12.3217V10.0781C18.2657 6.80522 16.0902 4.0312 13.1094 3.12516V2.10938C13.1094 0.946266 12.1632 0 11.0001 0C9.83695 0 8.89068 0.946266 8.89068 2.10938V3.12516C5.9099 4.0312 3.73443 6.80517 3.73443 10.0781V12.3217C3.73443 15.1966 2.63859 17.9227 0.648789 19.9977C0.453789 20.2011 0.398992 20.5011 0.509523 20.7602C0.620055 21.0194 0.874586 21.1875 1.1563 21.1875H7.55516C7.88179 22.7903 9.30229 24 11.0001 24C12.6979 24 14.1183 22.7903 14.4449 21.1875H20.8438C21.1255 21.1875 21.38 21.0194 21.4905 20.7602C21.6011 20.5011 21.5463 20.2011 21.3513 19.9977C19.3615 17.9227 18.2657 15.1965 18.2657 12.3217ZM10.2969 2.10938C10.2969 1.72167 10.6124 1.40625 11.0001 1.40625C11.3878 1.40625 11.7032 1.72167 11.7032 2.10938V2.84663C11.4718 2.82431 11.2372 2.8125 11.0001 2.8125C10.7629 2.8125 10.5284 2.82431 10.2969 2.84663V2.10938ZM11.0001 22.5938C10.0834 22.5938 9.30187 22.0059 9.01162 21.1875H12.9885C12.6982 22.0059 11.9167 22.5938 11.0001 22.5938ZM2.67177 19.7812C4.27307 17.6348 5.14068 15.0371 5.14068 12.3217V10.0781C5.14068 6.84727 7.7692 4.21875 11.0001 4.21875C14.2309 4.21875 16.8594 6.84727 16.8594 10.0781V12.3217C16.8594 15.0371 17.727 17.6348 19.3284 19.7812H2.67177Z'
          // fill='#00378B'
          className='fill-current'
        />
        <path
          d='M20.1405 10.0783C20.1405 10.4666 20.4553 10.7814 20.8436 10.7814C21.2319 10.7814 21.5467 10.4666 21.5467 10.0783C21.5467 7.2611 20.4497 4.61253 18.4576 2.62048C18.1831 2.34593 17.7379 2.34588 17.4633 2.62048C17.1887 2.89507 17.1887 3.34024 17.4633 3.61484C19.1897 5.34129 20.1405 7.63671 20.1405 10.0783Z'
          // fill='#00378B'
          className='fill-current'
        />
        <path
          d='M1.15625 10.7814C1.54456 10.7814 1.85938 10.4666 1.85938 10.0783C1.85938 7.63673 2.81019 5.34131 4.53659 3.61486C4.81119 3.34026 4.81119 2.89509 4.53659 2.6205C4.26205 2.3459 3.81683 2.3459 3.54223 2.6205C1.55019 4.61254 0.453125 7.26107 0.453125 10.0783C0.453125 10.4666 0.767937 10.7814 1.15625 10.7814Z'
          // fill='#00378B'
          className='fill-current'
        />
      </svg>
    </div>
  )
}
export default NotificationIcon
